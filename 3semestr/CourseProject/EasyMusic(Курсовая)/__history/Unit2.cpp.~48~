//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop
#include <System.IOUtils.hpp>
#include "Unit6.h"
#include "Unit2.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm2 *Form2;
//---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TForm2::FormCreate(TObject *Sender)
{
	  const TStringDynArray dirs = TDirectory::GetDirectories(L"C:\\Users\\Ilya\\Playlists");
	  for (int i = 0; i < dirs.Length; i++)
	  {
		  String directory = dirs[i];
		  std::string dirname = AnsiString(directory).c_str() ;
		  int bracketposition = dirname.rfind("\\");
          std::string  playlistname  = dirname.substr(bracketposition+1);
		  playlistslb->AddItem(AnsiString(playlistname.c_str()),0);
      }
}
//---------------------------------------------------------------------------
void __fastcall TForm2::cancelchoosebtnClick(TObject *Sender)
{
	Form2->Close();
	Form2->DoDestroy();
}
//---------------------------------------------------------------------------
void __fastcall TForm2::chooseplbtnClick(TObject *Sender)
{
	Form6->playlistdir = "C:\\Users\\Ilya\\Playlists\\"  + playlistslb->Items->Strings[playlistslb->ItemIndex] +"\\"  ;
	Form6->playlistname =playlistslb->Items->Strings[playlistslb->ItemIndex];
	Form6->MusicList->Clear();
	Form6->GetMusicFromDir(Form6->playlistdir);
	Form6->IsPlaying = false;
	TBitmap *bmp = new Graphics::TBitmap;
	bmp->LoadFromFile("C:\\Users\\Ilya\\Playlists\\"  + playlistslb->Items->Strings[playlistslb->ItemIndex]+"\\"+playlistslb->Items->Strings[playlistslb->ItemIndex]+".bmp");
	Form6->Image2->Canvas->StretchDraw(Rect(0,0,270,270),bmp);
	Form2->Close();
	Form2->DoDestroy();
    Form6->PlayListNameLabel->Caption  =playlistname;
}
//---------------------------------------------------------------------------
bool __fastcall  TForm2::DeleteDir(AnsiString DirName)
{
TSearchRec sr;
if (DirName.Length())
 {
 if (!FindFirst(DirName+"\\*.*",faAnyFile,sr))
 do
  {
	  if (!(sr.Name=="." || sr.Name==".."))
	  {
	   if (((sr.Attr & faDirectory) == faDirectory ) ||
	   (sr.Attr == faDirectory))// найдена папка
		{
		FileSetAttr(DirName+"\\"+sr.Name, faDirectory );// сброс всяких read-only
		DeleteDir(DirName+"\\"+sr.Name);//рекурсивно удаляем содержимое
		RemoveDir(DirName + "\\"+sr.Name);// удаляем теперь уже пустую папку
		}
		else// иначе найден файл
		{
		FileSetAttr(DirName+"\\"+sr.Name, 0);// сброс всяких read-only
		DeleteFile(DirName+"\\"+sr.Name);// удаляем файл
		}
	  }
  }
 while (!FindNext(sr));// ищем опять, пока не найдем все
 FindClose(sr);
 }
RemoveDir(DirName);
return true;
}
void __fastcall TForm2::DeletePlaylistbtnClick(TObject *Sender)
{
		  AnsiString plname =  playlistslb->Items->Strings[playlistslb->ItemIndex];
		  AnsiString pldir =  "C:\\Users\\Ilya\\Playlists\\"  + playlistslb->Items->Strings[playlistslb->ItemIndex];
		  if(pldir == "C:\\Users\\Ilya\\Playlists\\StandartPlaylist")
		  {
			  ShowMessage("Стандартный плэйлист не может быть удален");
		  }
		  else
		  {
				playlistslb->Items->Delete(playlistslb->ItemIndex);
				if(DeleteDir(pldir))
				{
					ShowMessage("Плэйлист успешно удален");
				}
				else
				{
					playlistslb->AddItem(plname,0);
                    ShowMessage("Произошла ошибка!!!");
                }
		  }
}
//---------------------------------------------------------------------------

